setup:
  - requires:
      cluster_features: 'rrf_retriever_supported'
      reason: 'test requires rrf retriever implementation'

  - do:
      indices.create:
        index: test
        body:
          settings:
            number_of_shards: 1
            number_of_replicas: 0
          mappings:
            properties:
              text:
                type: text
              keyword:
                type: keyword
              vector:
                type: dense_vector
                dims: 1
                index: true
                similarity: l2_norm
                index_options:
                  type: hnsw
                  ef_construction: 100
                  m: 16

  - do:
      index:
        index: test
        id: "1"
        body:
          text: "term term term term term term term term term"
          vector: [1.0]

  - do:
      index:
        index: test
        id: "2"
        body:
          text: "term term term term term term term term"
          keyword: "biology"
          vector: [2.0]

  - do:
      index:
        index: test
        id: "3"
        body:
          text: "term term term term term term term"
          keyword: "technology"
          vector: [3.0]

  - do:
      index:
        index: test
        id: "4"
        body:
          text: "term term term term term term"
          vector: [4.0]
  - do:
      index:
        index: test
        id: "5"
        body:
          text: "term term term term term"
          keyword: "technology"
          vector: [5.0]
  - do:
      index:
        index: test
        id: "6"
        body:
          text: "term term term term"
          keyword: "biology"
          vector: [6.0]
  - do:
      index:
        index: test
        id: "7"
        body:
          text: "term term term"
          keyword: "astronomy"
          vector: [7.0]
  - do:
      index:
        index: test
        id: "8"
        body:
          text: "term term"
          keyword: "technology"
          vector: [8.0]
  - do:
      index:
        index: test
        id: "9"
        body:
          text: "term"
          keyword: "technology"
          vector: [9.0]
  - do:
      indices.refresh: {}

---
"rrf retriever with top-level collapse":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          track_total_hits: true
          retriever:
            rrf:
              retrievers: [
                {
                  knn: {
                    field: vector,
                    query_vector: [ 6.0 ],
                    k: 3,
                    num_candidates: 3
                  }
                },
                {
                  standard: {
                    query: {
                      term: {
                        text: term
                      }
                    }
                  }
                }
              ]
              rank_window_size: 5
              rank_constant: 10
          size: 3
          collapse: { field: keyword, inner_hits: { name: sub_hits, size: 2 } }

  - match: { hits.hits.0._id: "5" }
  - match: { hits.hits.0._rank: 1 }

  - match: { hits.hits.1._id: "6" }
  - match: { hits.hits.1._rank: 2 }

  - match: { hits.hits.2._id: "1" }
  - match: { hits.hits.2._rank: 3 }

  - match: { hits.hits.0.inner_hits.sub_hits.hits.total : 4 }
  - length: { hits.hits.0.inner_hits.sub_hits.hits.hits : 2 }
  - match: { hits.hits.0.inner_hits.sub_hits.hits.hits.0._id: "5" }
  - match: { hits.hits.0.inner_hits.sub_hits.hits.hits.1._id: "3" }

  - length: { hits.hits.1.inner_hits.sub_hits.hits.hits : 2 }
  - match: { hits.hits.1.inner_hits.sub_hits.hits.hits.0._id: "6" }
  - match: { hits.hits.1.inner_hits.sub_hits.hits.hits.1._id: "2" }

  - length: { hits.hits.2.inner_hits.sub_hits.hits.hits: 2 }
  - match: { hits.hits.2.inner_hits.sub_hits.hits.hits.0._id: "1" }
  - match: { hits.hits.2.inner_hits.sub_hits.hits.hits.1._id: "4" }

---
"rrf retriever with inner-level collapse":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          track_total_hits: true
          retriever:
            rrf:
              retrievers: [
                {
                  knn: {
                    field: vector,
                    query_vector: [ 6.0 ],
                    k: 3,
                    num_candidates: 10
                  }
                },
                {
                  standard: {
                    query: {
                      term: {
                        text: term
                      }
                    },
                    collapse: { field: keyword, inner_hits: { name: sub_hits, size: 1 } }
                  }
                }
              ]
              rank_window_size: 5
              rank_constant: 10
          size: 3

  - match: { hits.hits.0._id: "7" }
  - match: { hits.hits.0._rank: 1 }

  - match: { hits.hits.1._id: "6" }
  - match: { hits.hits.1._rank: 2 }

  - match: { hits.hits.2._id: "1" }
  - match: { hits.hits.2._rank: 3 }
