setup:
  - requires:
      cluster_features: 'rrf_retriever_supported'
      reason: 'test requires rrf retriever implementation'

  - do:
      indices.create:
        index: test
        body:
          settings:
            number_of_shards: 1
            number_of_replicas: 0
          mappings:
            properties:
              text:
                type: text
              keyword:
                type: keyword
              vector:
                type: dense_vector
                dims: 1
                index: true
                similarity: l2_norm
                index_options:
                  type: hnsw
                  ef_construction: 100
                  m: 16
              nested:
                type: nested
                properties:
                  views:
                    type: long

  - do:
      index:
        index: test
        id: "1"
        body:
          text: "term term term term term term term term term"
          vector: [1.0]

  - do:
      index:
        index: test
        id: "2"
        body:
          text: "term term term term term term term term"
          keyword: "biology"
          vector: [2.0]

  - do:
      index:
        index: test
        id: "3"
        body:
          text: "term term term term term term term"
          keyword: "technology"
          vector: [3.0]

  - do:
      index:
        index: test
        id: "4"
        body:
          text: "term term term term term term"
          vector: [4.0]
  - do:
      index:
        index: test
        id: "5"
        body:
          text: "term term term term term"
          keyword: "technology"
          vector: [5.0]
  - do:
      index:
        index: test
        id: "6"
        body:
          text: "term term term term"
          keyword: "biology"
          vector: [6.0]
  - do:
      index:
        index: test
        id: "7"
        body:
          text: "term term term"
          keyword: "astronomy"
          vector: [7.0]
          nested: { views: 50}
  - do:
      index:
        index: test
        id: "8"
        body:
          text: "term term"
          keyword: "technology"
          vector: [8.0]
          nested: { views: 100}
  - do:
      index:
        index: test
        id: "9"
        body:
          text: "term"
          keyword: "technology"
          vector: [9.0]
          nested: { views: 10}
  - do:
      indices.refresh: {}

---
"rrf retriever with nested query":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        body:
          track_total_hits: true
          retriever:
            rrf:
              retrievers: [
                {
                  knn: {
                    field: vector,
                    query_vector: [ 7.0 ],
                    k: 1,
                    num_candidates: 3
                  }
                },
                {
                  standard: {
                    query: {
                      nested: {
                        path: nested,
                        query: {
                          range: {
                            nested.views: {
                              gte: 50
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
              rank_window_size: 5
              rank_constant: 10
          size: 3

  - match: { hits.total : 2 }

  - match: { hits.hits.0._id: "7" }
  - match: { hits.hits.0._rank: 1 }

  - match: { hits.hits.1._id: "8" }
  - match: { hits.hits.1._rank: 2 }
